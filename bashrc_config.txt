
# ====== COLORS THEME START ======

# Base colors
COLOR1="\[\e[32m\]"      # Green
COLOR2="\[\e[34m\]"      # Blue
COLOR3="\[\e[33m\]"      # Yellow
COLOR4="\[\e[36m\]"      # Cyan
COLOR5="\[\e[31m\]"      # Red

# Specific colors
COLOR6="\[\e[35m\]"      # For Python
COLOR7="\[\e[38;5;93m\]" # For Git
COLOR8="\[\e[38;2;255;255;255m\]"  # Pure White, for terminal and ❯

# ====== COLORS THEME END ======


# Python version cache
cache_python_version() {
  PYTHON_VERSION=""
  if command -v python3 >/dev/null 2>&1; then
    PYTHON_VERSION=$(python3 --version 2>&1 | awk '{print $2}')
  elif command -v python >/dev/null 2>&1; then
    PYTHON_VERSION=$(python --version 2>&1 | awk '{print $2}')
  fi
}

chpwd() {
  cache_python_version
}

# Enhanced Git information - SPACED VERSION
parse_git_branch() {
  local branch=$(git symbolic-ref --short HEAD 2>/dev/null)
  if [[ -n $branch ]]; then
    local staged=""
    local unstaged=""
    local untracked=""
    local commit_count=""
    
    commit_count=$(git rev-list --count HEAD 2>/dev/null)
    
    # Staged files (ready to commit)
    local staged_count=$(git diff --cached --name-only 2>/dev/null | wc -l)
    # Modified but not staged files
    local unstaged_count=$(git diff --name-only 2>/dev/null | wc -l)
    # Untracked files
    local untracked_count=$(git ls-files --others --exclude-standard 2>/dev/null | wc -l)
    
    if [[ $staged_count -gt 0 ]]; then
      staged="  ${staged_count} staged"
    fi
    if [[ $unstaged_count -gt 0 ]]; then
      unstaged="  ${unstaged_count} modified"
    fi
    if [[ $untracked_count -gt 0 ]]; then
      untracked="  ${untracked_count} untracked"
    fi
    
    local changes="${staged}${unstaged}${untracked}"
    echo " ${branch}${changes}  ${commit_count} commits"
  fi
}

# Python virtual environment information - SPACED VERSION
venv_info() {
  if [[ -n "$VIRTUAL_ENV" ]]; then
    local python_version=$(python --version 2>&1 | awk '{print $2}')
    local env_type="venv"
    
    # Detect conda environments
    if [[ -n "$CONDA_DEFAULT_ENV" ]]; then
      env_type="conda"
      echo " $(basename "$CONDA_DEFAULT_ENV")  ${python_version} "
    else
      echo " $(basename "$VIRTUAL_ENV")  ${python_version} "
    fi
  fi
}

# Disable Python's default venv prefix
export VIRTUAL_ENV_DISABLE_PROMPT=1



# Final PS1 (your image style, no RESET, no jobs_info)
PS1_CUSTOM="${COLOR1}\$(venv_info)${COLOR3}\w ${COLOR7}\$(parse_git_branch)\n${COLOR8}❯"
export PS1=$PS1_CUSTOM

